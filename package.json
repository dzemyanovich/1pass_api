{
  "name": "1pass_api",
  "version": "1.0.0",
  "main": "index.js",
  "repository": "git@gitlab.com:my_group5633507/1pass_api.git",
  "author": "Aliaksei Dzemyanovich <aliaksei.dzemyanovich@gmail.com>",
  "license": "MIT",
  "scripts": {
    "clean": "rm -rf lambda/dist",
    "compile": "tsc --build tsconfig.prod.json",
    "build": "yarn && yarn compile && cd lambda && yarn",
    "tg-validate": "cd terragrunt/live/dev && terragrunt run-all validate",
    "tg-plan": "yarn build && cd terragrunt/live/dev && terragrunt run-all plan",
    "tg-plan-pure": "cd terragrunt/live/dev && terragrunt run-all plan",
    "tg-apply": "yarn build && cd terragrunt/live/dev && terragrunt run-all apply --terragrunt-non-interactive",
    "tg-apply-pure": "cd terragrunt/live/dev && terragrunt run-all apply --terragrunt-non-interactive",
    "tg-destroy": "cd terragrunt/live/dev && terragrunt run-all destroy --terragrunt-non-interactive",
    "db-create-dev": "export NODE_ENV=dev && node lambda/dist/db/create-db.js",
    "db-create-preprod": "export NODE_ENV=preprod && node lambda/dist/db/create-db.js",
    "db-create-prod": "export NODE_ENV=prod && node lambda/dist/db/create-db.js",
    "db-drop-dev": "export NODE_ENV=dev && node lambda/dist/db/drop-db.js",
    "db-drop-preprod": "export NODE_ENV=preprod && node lambda/dist/db/drop-db.js",
    "db-drop-prod": "export NODE_ENV=prod && node lambda/dist/db/drop-db.js",
    "db-empty-migration": "npx sequelize-cli migration:generate --name migration-skeleton",
    "db-migrate-dev": "export NODE_ENV=dev && npx sequelize-cli db:migrate",
    "db-migrate-preprod": "export NODE_ENV=preprod && npx sequelize-cli db:migrate",
    "db-migrate-prod": "export NODE_ENV=prod && npx sequelize-cli db:migrate",
    "db-undo-migrate-dev": "export NODE_ENV=dev && npx sequelize-cli db:migrate:undo:all",
    "db-undo-migrate-preprod": "export NODE_ENV=preprod && npx sequelize-cli db:migrate:undo:all",
    "db-undo-migrate-prod": "export NODE_ENV=prod && npx sequelize-cli db:migrate:undo:all",
    "db-create-seed": "npx sequelize-cli seed:generate --name my-seed-name",
    "db-seeds-dev": "export NODE_ENV=dev && npx sequelize-cli db:seed:all",
    "db-seeds-preprod": "export NODE_ENV=preprod && npx sequelize-cli db:seed:all",
    "db-seeds-prod": "export NODE_ENV=prod && npx sequelize-cli db:seed:all",
    "db-undo-seeds-dev": "export NODE_ENV=dev && npx sequelize-cli db:seed:undo:all",
    "db-undo-latest-seed-dev": "export NODE_ENV=dev && npx sequelize-cli db:seed:undo",
    "db-undo-seeds-preprod": "export NODE_ENV=preprod && npx sequelize-cli db:seed:undo:all",
    "db-undo-latest-seed-preprod": "export NODE_ENV=preprod && npx sequelize-cli db:seed:undo",
    "db-undo-seeds-prod": "export NODE_ENV=prod && npx sequelize-cli db:seed:undo:all",
    "db-undo-latest-seed-prod": "export NODE_ENV=prod && npx sequelize-cli db:seed:undo",
    "integration-dev-local": "jest jest/integration.test.ts --coverage=false --modulePathIgnorePatterns=[] --setupFilesAfterEnv '<rootDir>/jest/setup/setup.shared.ts' '<rootDir>/jest/setup/setup.dev.ts' '<rootDir>/jest/setup/setup.local.ts'",
    "integration-preprod": "jest jest/integration.test.ts --coverage=false --modulePathIgnorePatterns=[] --setupFilesAfterEnv '<rootDir>/jest/setup/setup.shared.ts' '<rootDir>/jest/setup/setup.preprod.ts'",
    "integration-preprod-local": "jest jest/integration.test.ts --coverage=false --modulePathIgnorePatterns=[] --setupFilesAfterEnv '<rootDir>/jest/setup/setup.shared.ts' '<rootDir>/jest/setup/setup.preprod.ts' '<rootDir>/jest/setup/setup.local.ts'",
    "integration-prod": "jest jest/integration.test.ts --coverage=false --modulePathIgnorePatterns=[] --setupFilesAfterEnv '<rootDir>/jest/setup/setup.shared.ts' '<rootDir>/jest/setup/setup.prod.ts'",
    "integration-prod-local": "jest jest/integration.test.ts --coverage=false --modulePathIgnorePatterns=[] --setupFilesAfterEnv '<rootDir>/jest/setup/setup.shared.ts' '<rootDir>/jest/setup/setup.prod.ts' '<rootDir>/jest/setup/setup.local.ts'",
    "integration-lambda": "jest jest/lambda.test.ts --coverage=false --modulePathIgnorePatterns=[] --testEnvironment='node' --watch",
    "integration-lambda-watch": "yarn integration-lambda --watch",
    "e2e-dev-local": "jest jest/e2e.test.ts --coverage=false --modulePathIgnorePatterns=[] --setupFilesAfterEnv '<rootDir>/jest/setup/setup.shared.ts' '<rootDir>/jest/setup/setup.dev.ts' '<rootDir>/jest/setup/setup.local.ts'",
    "e2e-preprod": "jest jest/e2e.test.ts --coverage=false --modulePathIgnorePatterns=[] --setupFilesAfterEnv '<rootDir>/jest/setup/setup.shared.ts' '<rootDir>/jest/setup/setup.preprod.ts'",
    "e2e-preprod-local": "jest jest/e2e.test.ts --coverage=false --modulePathIgnorePatterns=[] --setupFilesAfterEnv '<rootDir>/jest/setup/setup.shared.ts' '<rootDir>/jest/setup/setup.preprod.ts' '<rootDir>/jest/setup/setup.local.ts'",
    "e2e-prod": "jest jest/e2e.test.ts --coverage=false --modulePathIgnorePatterns=[] --setupFilesAfterEnv '<rootDir>/jest/setup/setup.shared.ts' '<rootDir>/jest/setup/setup.prod.ts'",
    "e2e-prod-local": "jest jest/e2e.test.ts --coverage=false --modulePathIgnorePatterns=[] --setupFilesAfterEnv '<rootDir>/jest/setup/setup.shared.ts' '<rootDir>/jest/setup/setup.prod.ts' '<rootDir>/jest/setup/setup.local.ts'",
    "unit": "jest --coverage=false --setupFilesAfterEnv '<rootDir>/jest/setup/setup.shared.ts'",
    "unit-local": "jest --coverage=false --setupFilesAfterEnv '<rootDir>/jest/setup/setup.shared.ts' '<rootDir>/jest/setup/setup.local.ts'",
    "unit-watch": "yarn unit-local --watch",
    "lint": "eslint ."
  },
  "devDependencies": {
    "@types/jest": "^29.5.3",
    "@types/node": "^20.4.10",
    "@types/validator": "^13.11.1",
    "@typescript-eslint/eslint-plugin": "^6.3.0",
    "@typescript-eslint/parser": "^6.3.0",
    "eslint": "^8.46.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-airbnb-typescript": "^17.1.0",
    "eslint-plugin-import": "^2.28.0",
    "firebase-admin": "11.10.1",
    "husky": "^8.0.3",
    "jest": "^29.6.1",
    "jest-environment-jsdom": "^29.6.1",
    "jwt-simple": "^0.5.6",
    "mysql2": "^3.5.1",
    "reflect-metadata": "^0.1.13",
    "sequelize": "^6.32.1",
    "sequelize-cli": "^6.6.1",
    "sequelize-typescript": "^2.1.5",
    "tedious": "^16.2.0",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "twilio": "^4.15.0",
    "typescript": "^5.1.6",
    "validator": "^13.11.0",
    "zod": "^3.22.0"
  },
  "dependencies": {
    "@types/aws-lambda": "^8.10.130",
    "aws-sdk": "^2.1510.0",
    "axios": "^1.4.0"
  }
}
