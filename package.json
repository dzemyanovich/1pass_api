{
  "name": "1pass_api",
  "version": "1.0.0",
  "main": "index.js",
  "repository": "git@gitlab.com:my_group5633507/1pass_api.git",
  "author": "Aliaksei Dzemyanovich <aliaksei.dzemyanovich@gmail.com>",
  "license": "MIT",
  "scripts": {
    "compile": "tsc --build",
    "build": "yarn && yarn compile && cd lambda && yarn",
    "tg-validate": "cd terragrunt/live/dev && terragrunt run-all validate",
    "tg-plan": "yarn build && cd terragrunt/live/dev && terragrunt run-all plan",
    "tg-plan-pure": "cd terragrunt/live/dev && terragrunt run-all plan",
    "tg-apply": "yarn build && cd terragrunt/live/dev && terragrunt run-all apply --terragrunt-non-interactive",
    "tg-apply-pure": "cd terragrunt/live/dev && terragrunt run-all apply --terragrunt-non-interactive",
    "tg-destroy": "cd terragrunt/live/dev && terragrunt run-all destroy --terragrunt-non-interactive",
    "db-create-dev": "export NODE_ENV=dev && node lambda/src/db/create-db.js",
    "db-create-preprod": "export NODE_ENV=preprod && node lambda/src/db/create-db.js",
    "db-create-prod": "export NODE_ENV=prod && node lambda/src/db/create-db.js",
    "db-drop-dev": "export NODE_ENV=dev && node lambda/src/db/drop-db.js",
    "db-drop-preprod": "export NODE_ENV=preprod && node lambda/src/db/drop-db.js",
    "db-drop-prod": "export NODE_ENV=prod && node lambda/src/db/drop-db.js",
    "db-migration": "npx sequelize-cli model:generate --name SportObject --attributes name:string,address:string,lat:float,long:float",
    "db-empty-migration": "npx sequelize-cli migration:generate --name migration-skeleton",
    "db-migrate-dev": "export NODE_ENV=dev && npx sequelize-cli db:migrate",
    "db-migrate-preprod": "export NODE_ENV=preprod && npx sequelize-cli db:migrate",
    "db-migrate-prod": "export NODE_ENV=prod && npx sequelize-cli db:migrate",
    "db-undo-migrate-dev": "export NODE_ENV=dev && npx sequelize-cli db:migrate:undo:all",
    "db-undo-migrate-preprod": "export NODE_ENV=preprod && npx sequelize-cli db:migrate:undo:all",
    "db-undo-migrate-prod": "export NODE_ENV=prod && npx sequelize-cli db:migrate:undo:all",
    "db-seeds-dev": "export NODE_ENV=dev && npx sequelize-cli db:seed:all",
    "db-seeds-preprod": "export NODE_ENV=preprod && npx sequelize-cli db:seed:all",
    "db-seeds-prod": "export NODE_ENV=prod && npx sequelize-cli db:seed:all",
    "db-undo-seeds-dev": "export NODE_ENV=dev && npx sequelize-cli db:seed:undo:all",
    "db-undo-seeds-preprod": "export NODE_ENV=preprod && npx sequelize-cli db:seed:undo:all",
    "db-undo-seeds-prod": "export NODE_ENV=prod && npx sequelize-cli db:seed:undo:all",
    "integration-dev-local": "jest jest/integration.test.ts --coverage=false --modulePathIgnorePatterns=[] --setupFilesAfterEnv '<rootDir>/jest/setup.dev.ts'",
    "integration-preprod": "jest jest/integration.test.ts --coverage=false --modulePathIgnorePatterns=[] --setupFilesAfterEnv '<rootDir>/jest/setup.preprod.ts'",
    "integration-preprod-local": "jest jest/integration.test.ts --coverage=false --modulePathIgnorePatterns=[] --setupFilesAfterEnv '<rootDir>/jest/setup.preprod.ts'",
    "integration-prod": "jest jest/integration.test.ts --coverage=false --modulePathIgnorePatterns=[] --setupFilesAfterEnv '<rootDir>/jest/setup.prod.ts'",
    "integration-prod-local": "jest jest/integration.test.ts --coverage=false --modulePathIgnorePatterns=[] --setupFilesAfterEnv '<rootDir>/jest/setup.prod.ts'",
    "twilio": "jest jest/twilio.test.ts --coverage=false --modulePathIgnorePatterns=[] --testEnvironment='node'"
  },
  "devDependencies": {
    "@types/jest": "^29.5.3",
    "axios": "^1.4.0",
    "jest": "^29.6.1",
    "jest-environment-jsdom": "^29.6.1",
    "mysql2": "^3.5.1",
    "sequelize": "^6.32.1",
    "sequelize-cli": "^6.6.1",
    "tedious": "^16.2.0",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "typescript": "^5.1.6"
  }
}
